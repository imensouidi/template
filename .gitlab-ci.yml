stages:
- build
- deploy

variables:
  AZURE_WEBAPP_NAME: "templatetalent"
  AZURE_RESOURCE_GROUP: "AnalyseCv-RG"
  CONTAINER_REGISTRY_NAME: "AIregistryhepta"
  IMAGE_NAME: "appv3-aktemplate"
  AKS_CLUSTER_NAME: "aks-cluster"
  AKS_RESOURCE_GROUP: "aks-resource-group"
build:
  stage: build
  tags:
  - Ai-train
  script:
  - docker login $AZURE_CONTAINER_REGISTRY_LOGIN_SERVER -u $DOCKER_USERNAME --password $DOCKER_PASSWORD
  - docker build --no-cache -t $AZURE_CONTAINER_REGISTRY_LOGIN_SERVER/$IMAGE_NAME/$IMAGE_NAME:$CI_COMMIT_SHORT_SHA .
  - docker tag $AZURE_CONTAINER_REGISTRY_LOGIN_SERVER/$IMAGE_NAME/$IMAGE_NAME:$CI_COMMIT_SHORT_SHA $AZURE_CONTAINER_REGISTRY_LOGIN_SERVER/$IMAGE_NAME/$IMAGE_NAME:$CI_COMMIT_SHORT_SHA
  - docker push $AZURE_CONTAINER_REGISTRY_LOGIN_SERVER/$IMAGE_NAME/$IMAGE_NAME:$CI_COMMIT_SHORT_SHA
  only:
  - template

deploy:
  stage: deploy
  tags:
  - Ai-train
  when: manual
  script:
  - echo login in azure with a password
  - |
    if [ -f "password-${ENV}.crypt" ]; then
      echo "used password encrypt in artifact for $ENV"
      openssl enc -d -aes-256-cbc -in password-${ENV}.crypt -out password-${ENV}.out -pass env:SECRET_KEY_FOR_CRYPT_DEPLOY_PASSWORD -iter 100000
      PASSWORD=$(cat password-${ENV}.out )
      rm password-${ENV}.out
    fi
  - if [ -z "$PASSWORD" ]; then echo "Variables PASSWORD missing ==> job failed." && false ; fi
  - echo "Logging into Azure..."
  - echo "Deploying app to AKS..."
  - az login --service-principal -u $SERVICE_PRINCIPAL_USER -p $PASSWORD --tenant $TENANT_ID
  - az aks get-credentials --resource-group $AKS_RESOURCE_GROUP --name $AKS_CLUSTER_NAME --overwrite-existing
  - echo "Deploying to AKS..."
  - envsubst < deployment.yaml | kubectl apply -f -
  only:
  - template # Deploy only when changes are pushed to the master branch
